trigger:
  branches:
    include:
    - branch-for-*

variables:
  REPO_DIR: checkout
  BUILD_DEPENDS: "-Ur checkout/requirements.txt"
  TEST_DEPENDS: "-Ur checkout/requirements.txt"
  PLAT: x86_64
  UNICODE_WIDTH: 32
  HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
- job: 'Wheels'
  strategy:
    matrix:
      # Python27Linux:
      #   imageName: 'ubuntu-16.04'
      #   python.version: '2.7'
      # Python27Mac:
      #   imageName: 'macos-10.13'
      #   python.version: '2.7'
      # Python35Linux:
      #   imageName: 'ubuntu-16.04'
      #   python.version: '3.5'
      # Python35Windows:
      #   imageName: 'vs2017-win2016'
      #   python.version: '3.5'
      # Python35Mac:
      #   imageName: 'macos-10.13'
      #   python.version: '3.5'
      # Python36Linux:
      #   imageName: 'ubuntu-16.04'
      #   python.version: '3.6'
      # Python36Windows:
      #   imageName: 'vs2017-win2016'
      #   python.version: '3.6'
      # Python36Mac:
      #   imageName: 'macos-10.13'
      #   python.version: '3.6'
      # Python37Linux:
      #   imageName: 'ubuntu-16.04'
      #   python.version: '3.7'
      # Python37Windows:
      #   imageName: 'vs2017-win2016'
      #   python.version: '3.7'
      # Python37Mac:
      #   imageName: 'macos-10.13'
      #   python.version: '3.7'
      Python38Linux:
        imageName: 'ubuntu-16.04'
        python.version: '3.8'
        os: linux
      # Python38Windows:
      #   imageName: 'vs2017-win2016'
      #   python.version: '3.8'
      Python38Mac:
        imageName: 'macos-10.13'
        python.version: '3.8'
        os: osx
    maxParallel: 4
  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: git submodule update --init --recursive
    displayName: 'Set up multibuild'

  - script: |
      # This is gettext needed for envsubst on osx =/
      brew install gettext
      brew link --force gettext
    condition: eq(variables['os'], 'osx')
    displayName: 'Before install (Mac)'

  - script: pip install virtualenv
    condition: eq(variables['os'], 'linux')
    displayName: 'Before install (Linux)'

  - powershell: |
      # Install new Python if necessary
      .\multibuild\install_python.ps1
      SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
      python -m pip install -U pip setuptools wheel virtualenv
    condition: eq(variables['os'], 'win')
    displayName: 'Before install (Windows)'

  - script: |
      pip install -Ur ./requirements.txt
      eval $(python ./run.py build-spec build-spec.json)
      git clone "${BUILD_SPEC_CLONE_URL}" "$REPO_DIR"
      export MB_PYTHON_VERSION=$(python.version)
      export TRAVIS_PYTHON_VERSION=$(python.version)
      export TRAVIS_OS_NAME=$(os)
      export BUILD_COMMIT="${BUILD_SPEC_COMMIT}"
      export PACKAGE_NAME="${BUILD_SPEC_PACKAGE_NAME}"
      cat config.sh.template | envsubst > config.sh
      source $(Build.SourcesDirectory)/multibuild/common_utils.sh
      source $(Build.SourcesDirectory)/multibuild/travis_steps.sh
      before_install
      cp -r / /io//$(Build.SourcesDirectory)
      clean_code $REPO_DIR $BUILD_COMMIT
      build_wheel $REPO_DIR $PLAT
      install_run $PLAT
    condition: or(eq(variables['os'], 'osx'), eq(variables['os'], 'linux'))
    displayName: 'Install and build wheel (Mac / Linux)'

  # - task: CopyFiles@2
  #   inputs:
  #     # This is hard-coded in the Docker scripts for Linux
  #     contents: '/**'
  #     targetFolder: /io//$(Build.SourcesDirectory)
  #   condition: eq(variables['os'], 'linux')
  #   displayName: 'Set up multibuild (Linux)'


  - script: |
      pip install -Ur ./requirements.txt
      python -u run.py appveyor-build --build-spec build-spec.json
    condition: eq(variables['os'], 'win')
    displayName: 'Install and build wheel (Windows)'

  - task: CopyFiles@2
    inputs:
      contents: 'wheelhouse/**'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy wheels'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: wheels
    displayName: 'Publish wheels in pipeline'
